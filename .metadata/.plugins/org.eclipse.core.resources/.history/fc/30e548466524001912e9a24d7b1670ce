package base.po;

import org.testng.annotations.Test;

import static org.testng.Assert.assertEquals;
import static org.testng.Assert.assertTrue;
import java.util.function.Function;

import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.PageFactory;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Wait;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeClass;
import org.testng.Assert;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeSuite;
import org.testng.annotations.AfterSuite;
import base.po.ProjectDashboard_PO;

/* This class only tests functionality from the ProjectDashBoard_PO class
 * Each test needs to be documented on what exactly is being tested */
public class ProjectDashBoard_PO_Test {

	public WebDriver _driver;
	public WebDriverWait _wait;
	public ProjectDashboard_PO ProjectDashboard_PO;
	private final String _base_url = "http://localhost:9000/";
	private final String _proj = "Proj_Name";
	
  @BeforeTest
  public void beforeTest() 
  {	  
	  //Logging which can be done in TestNG
	  _driver = new ChromeDriver();
	  _driver.navigate().to(_base_url);
	  ProjectDashboard_PO = PageFactory.initElements(_driver, ProjectDashboard_PO.class);	  
	  _wait = new WebDriverWait(_driver, 10);
	  _wait.until(ExpectedConditions.visibilityOf(ProjectDashboard_PO.Proj_Name));
  }

  @BeforeClass
  public void beforeClass() {
		System.out.println("\n**************************");
		System.out.println("Page Factory Tests Started");
		System.out.println("****************************");
  }

  /* This test validates the project dashboard name is correct and is visible */
  @Test(groups = { "Integration" })
  public void ValidateProjectDashBoardsName() {
	  
	  Assert.assertTrue(ProjectDashboard_PO.Proj_Name.isDisplayed());	
	  Assert.assertEquals(ProjectDashboard_PO.Proj_Name.getText(), "Project Dashboard");
  }
  
  /* This test involves changing the only values which can be manipulated
   * in Tagtune. This involves changes Project Owner, Budget and Status.
   * Once values have been changed then values have been changes the validate
   * that they are correct */   
  @Test(groups = { "Integration" })
  public void ValidateDataModelCorrectAfterChangingDataModelValues() {
	 JavascriptExecutor driver = null;
	 JavascriptExecutor js =  (JavascriptExecutor)driver;
	 js.executeScript("arguments[0].click();", ProjectDashboard_PO.TT_Proj_Owner_Edit_Button);
	  //ProjectDashboard_PO.TT_Proj_Owner_Edit_Button.click();
	  ProjectDashboard_PO.TT_Proj_Owner_Edit_Button.click();
	  js.executeScript("arguments[0].click();", ProjectDashboard_PO.TT_Proj_Owner_Edit_Button);
	  ProjectDashboard_PO.TT_Proj_Owner_TextBox.click();
	  ProjectDashboard_PO.TT_Proj_Owner_TextBox.clear();
	  
	  String productOwner = ProjectDashboard_PO.TT_Proj_Owner_TextBox.getText();
	  
	  Assert.assertTrue(ProjectDashboard_PO.TT_Proj_Owner_TextBox.isDisplayed());
	  Assert.assertTrue(ProjectDashboard_PO.TT_Proj_Owner_Edit_Button.isDisplayed());
	  Assert.assertTrue(ProjectDashboard_PO.Proj_Name.isDisplayed());	  
  }


  /* Annotations to use after test */
  @AfterTest
  public void afterTest() {
	  _driver.close();
  }
  
  @AfterClass
  public void afterClass() {
	  
		System.out.println("**************************");
		System.out.println("Page Factory Tests Ended");
		System.out.println("****************************\n");
  }

}
